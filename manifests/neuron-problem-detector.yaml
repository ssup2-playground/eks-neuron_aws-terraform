apiVersion: v1
kind: ServiceAccount
metadata:
  name: node-problem-detector
  namespace: kube-system

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: npd-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:node-problem-detector
subjects:
- kind: ServiceAccount
  name: node-problem-detector
  namespace: kube-system

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:node-problem-detector
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - ""
  - events.k8s.io
  resources:
  - events
  verbs:
  - create
  - patch
  - update
---
kind: ConfigMap
metadata:
  name: node-problem-detector-config
  namespace: kube-system
apiVersion: v1
data:
  kernel-monitor.json: |
    {
        "plugin": "kmsg",
        "logPath": "/dev/kmsg",
        "lookback": "5m",
        "bufferSize": 10,
        "source": "kernel-monitor",
        "conditions": [
            {
                "type": "NeuronHealth",
                "reason": "NeuronHasNoError",
                "message": "Neuron has no error"
            }
        ],
        "rules": [
            {
                "type": "permanent",
                "condition": "NeuronHealth",
                "reason": "NeuronHasError_SRAM_UNCORRECTABLE_ERROR",
                "pattern": ".* NEURON_HW_ERR=SRAM_UNCORRECTABLE_ERROR .*"
            },
            {
                "type": "permanent",
                "condition": "NeuronHealth",
                "reason": "NeuronHasError_NC_UNCORRECTABLE_ERROR",
                "pattern": ".* NEURON_HW_ERR=NC_UNCORRECTABLE_ERROR .*"
            },
            {
                "type": "permanent",
                "condition": "NeuronHealth",
                "reason": "NeuronHasError_HBM_UNCORRECTABLE_ERROR",
                "pattern": ".* NEURON_HW_ERR=HBM_UNCORRECTABLE_ERROR .*"
            },
            {
                "type": "permanent",
                "condition": "NeuronHealth",
                "reason": "NeuronHasError_DMA_ERROR",
                "pattern": ".* NEURON_HW_ERR=DMA_ERROR .*"
            }
        ]
    }
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: node-problem-detector
  namespace: kube-system
  labels:
    app: node-problem-detector
spec:
  selector:
    matchLabels:
      app: node-problem-detector
  template:
    metadata:
      labels:
        app: node-problem-detector
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: "node.kubernetes.io/instance-type"
                    operator: In
                    values:
                      - inf1.xlarge
                      - inf1.2xlarge
                      - inf1.6xlarge
                      - inf1.24xlarge
                      - inf2.xlarge
                      - inf2.8xlarge
                      - inf2.24xlarge
                      - inf2.48xlarge
                      - trn1.2xlarge
                      - trn1.32xlarge
                      - trn1n.32xlarge

      containers:
      - name: node-problem-detector
        command:
        - /node-problem-detector
        - --logtostderr
        - --config.system-log-monitor=/config/kernel-monitor.json
        image: registry.k8s.io/node-problem-detector/node-problem-detector:v0.8.19
        ports:
        - containerPort: 20257
        resources:
          limits:
            cpu: 10m
            memory: 80Mi
          requests:
            cpu: 10m
            memory: 80Mi
        imagePullPolicy: Always
        securityContext:
          privileged: true
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        volumeMounts:
        - name: log
          mountPath: /var/log
          readOnly: true
        - name: kmsg
          mountPath: /dev/kmsg
          readOnly: true
        # Make sure node problem detector is in the same timezone
        # with the host.
        - name: localtime
          mountPath: /etc/localtime
          readOnly: true
        - name: config
          mountPath: /config
          readOnly: true
      - name: node-recovery
        command:
        - /bin/sh
        - -c
        - "sleep 60 && /scripts/check-health.py"
        image: public.ecr.aws/neuron/neuron-node-recovery:1.2.0
        resources:
          limits:
            cpu: 10m
            memory: 150Mi
          requests:
            cpu: 10m
            memory: 150Mi
        imagePullPolicy: Always
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: ENABLE_RECOVERY
          value: "false"
      serviceAccountName: node-problem-detector
      volumes:
      - name: log
        # Config `log` to your system log directory
        hostPath:
          path: /var/log/
      - name: kmsg
        hostPath:
          path: /dev/kmsg
      - name: localtime
        hostPath:
          path: /etc/localtime
      - name: config
        configMap:
          name: node-problem-detector-config
          defaultMode: 0555
          items:
          - key: kernel-monitor.json
            path: kernel-monitor.json
      tolerations:
        - effect: NoSchedule
          operator: Exists
        - effect: NoExecute
          operator: Exists
